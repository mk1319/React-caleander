{"ast":null,"code":"import { useState } from 'react';\nconst daysShortArr = ['Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat', 'Sun'];\nconst monthNamesArr = ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'];\nconst event = [{\n  id: 1,\n  date: '21-9-2020',\n  title: \"Exam\",\n  name: \"Unit 1\",\n  discription: \"Unit 1 exam\"\n}, {\n  id: 2,\n  date: '21-9-2020',\n  title: \"Lecture\",\n  name: \"Python Lecture\",\n  discription: \"Python lecture\"\n}];\n\nconst useCalendar = (daysShort = daysShortArr, monthNames = monthNamesArr) => {\n  const today = new Date();\n  const todayFormatted = `${today.getDate()}-${today.getMonth() + 1}-${today.getFullYear()}`;\n  const daysInWeek = [1, 2, 3, 4, 5, 6, 0];\n  console.log(todayFormatted);\n  const [selectedDate, setSelectedDate] = useState(today);\n  const selectedMonthLastDate = new Date(selectedDate.getFullYear(), selectedDate.getMonth() + 1, 0);\n  const prevMonthLastDate = new Date(selectedDate.getFullYear(), selectedDate.getMonth(), 0);\n  const daysInMonth = selectedMonthLastDate.getDate();\n  const firstDayInMonth = new Date(selectedDate.getFullYear(), selectedDate.getMonth(), 1).getDay();\n  const startingPoint = daysInWeek.indexOf(firstDayInMonth) + 1;\n  let prevMonthStartingPoint = prevMonthLastDate.getDate() - daysInWeek.indexOf(firstDayInMonth) + 1;\n  let currentMonthCounter = 1;\n  let nextMonthCounter = 1;\n  const rows = 6;\n  const cols = 7;\n  const calendarRows = {};\n\n  for (let i = 1; i < rows + 1; i++) {\n    for (let j = 1; j < cols + 1; j++) {\n      if (!calendarRows[i]) {\n        calendarRows[i] = [];\n      }\n\n      if (i === 1) {\n        if (j < startingPoint) {\n          calendarRows[i] = [...calendarRows[i], {\n            classes: 'in-prev-month',\n            date: `${prevMonthStartingPoint}-${selectedDate.getMonth() === 0 ? 12 : selectedDate.getMonth()}-${selectedDate.getMonth() === 0 ? selectedDate.getFullYear() - 1 : selectedDate.getFullYear()}`,\n            value: prevMonthStartingPoint,\n            event: []\n          }];\n          prevMonthStartingPoint++;\n        } else {\n          calendarRows[i] = [...calendarRows[i], {\n            classes: '',\n            date: `${currentMonthCounter}-${selectedDate.getMonth() + 1}-${selectedDate.getFullYear()}`,\n            value: currentMonthCounter,\n            event: []\n          }];\n          currentMonthCounter++;\n        }\n      } else if (i > 1 && currentMonthCounter < daysInMonth + 1) {\n        calendarRows[i] = [...calendarRows[i], {\n          classes: '',\n          date: `${currentMonthCounter}-${selectedDate.getMonth() + 1}-${selectedDate.getFullYear()}`,\n          value: currentMonthCounter,\n          event: []\n        }];\n        currentMonthCounter++;\n      } else {\n        calendarRows[i] = [...calendarRows[i], {\n          classes: 'in-next-month',\n          date: `${nextMonthCounter}-${selectedDate.getMonth() + 2 === 13 ? 1 : selectedDate.getMonth() + 2}-${selectedDate.getMonth() + 2 === 13 ? selectedDate.getFullYear() + 1 : selectedDate.getFullYear()}`,\n          value: nextMonthCounter,\n          event: []\n        }];\n        nextMonthCounter++;\n      }\n    }\n  }\n\n  const getPrevMonth = () => {\n    setSelectedDate(prevValue => new Date(prevValue.getFullYear(), prevValue.getMonth() - 1, 1));\n  };\n\n  const getNextMonth = () => {\n    setSelectedDate(prevValue => new Date(prevValue.getFullYear(), prevValue.getMonth() + 1, 1));\n  };\n\n  return {\n    daysShort,\n    monthNames,\n    todayFormatted,\n    calendarRows,\n    selectedDate,\n    getPrevMonth,\n    getNextMonth\n  };\n};\n\nexport default useCalendar;","map":{"version":3,"sources":["C:/WebProject/educationmandal/Caleander/react-calendar-custom-hook/src/hooks/useCalendar.js"],"names":["useState","daysShortArr","monthNamesArr","event","id","date","title","name","discription","useCalendar","daysShort","monthNames","today","Date","todayFormatted","getDate","getMonth","getFullYear","daysInWeek","console","log","selectedDate","setSelectedDate","selectedMonthLastDate","prevMonthLastDate","daysInMonth","firstDayInMonth","getDay","startingPoint","indexOf","prevMonthStartingPoint","currentMonthCounter","nextMonthCounter","rows","cols","calendarRows","i","j","classes","value","getPrevMonth","prevValue","getNextMonth"],"mappings":"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","sourcesContent":["import { useState } from 'react';\r\n\r\nconst daysShortArr = [\r\n  'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat', 'Sun'\r\n];\r\n\r\nconst monthNamesArr = [\r\n  'January', 'February', 'March', 'April',\r\n  'May', 'June', 'July', 'August',\r\n  'September', 'October', 'November', 'December'\r\n];\r\n\r\nconst event=[\r\n  {\r\n    id:1,\r\n    date:'21-9-2020',\r\n    title:\"Exam\",\r\n    name:\"Unit 1\",\r\n    discription:\"Unit 1 exam\"\r\n  },\r\n  {\r\n    id:2,\r\n    date:'21-9-2020',\r\n    title:\"Lecture\",\r\n    name:\"Python Lecture\",\r\n    discription:\"Python lecture\"\r\n  }\r\n\r\n\r\n]\r\n\r\n\r\n\r\n\r\n\r\nconst useCalendar = (daysShort = daysShortArr, monthNames = monthNamesArr) => {\r\n\r\n  const today = new Date();\r\n\r\n  const todayFormatted = `${today.getDate()}-${today.getMonth() + 1}-${today.getFullYear()}`;\r\n  const daysInWeek = [1, 2, 3, 4, 5, 6, 0];\r\n  \r\n  console.log(todayFormatted)\r\n  const [selectedDate, setSelectedDate] = useState(today);\r\n\r\n  const selectedMonthLastDate = new Date(selectedDate.getFullYear(), selectedDate.getMonth() + 1, 0);\r\n\r\n\r\n  const prevMonthLastDate = new Date(selectedDate.getFullYear(), selectedDate.getMonth(), 0);\r\n  const daysInMonth = selectedMonthLastDate.getDate();\r\n\r\n\r\n  const firstDayInMonth = new Date(selectedDate.getFullYear(), selectedDate.getMonth(), 1).getDay();\r\n\r\n\r\n\r\n  const startingPoint = daysInWeek.indexOf(firstDayInMonth) + 1;\r\n\r\n  let prevMonthStartingPoint = prevMonthLastDate.getDate() - daysInWeek.indexOf(firstDayInMonth) + 1\r\n\r\n  let currentMonthCounter = 1;\r\n  let nextMonthCounter = 1;\r\n  const rows = 6;\r\n  const cols = 7;\r\n  const calendarRows = {};\r\n\r\n\r\n\r\n  for(let i = 1; i < rows + 1; i++) {\r\n    for(let j = 1; j < cols + 1; j++) {\r\n      \r\n      if(!calendarRows[i]) {\r\n        calendarRows[i] = [];\r\n      }\r\n\r\n      if(i === 1) {\r\n        \r\n        if(j < startingPoint) {\r\n          calendarRows[i] = [...calendarRows[i], {\r\n            classes: 'in-prev-month',\r\n            date: `${prevMonthStartingPoint}-${selectedDate.getMonth() === 0 ? 12 : selectedDate.getMonth()}-${selectedDate.getMonth() === 0 ? selectedDate.getFullYear() - 1 : selectedDate.getFullYear()}`,\r\n            value: prevMonthStartingPoint,\r\n            event:[]\r\n          }];\r\n\r\n          prevMonthStartingPoint++;\r\n        }\r\n        else{\r\n            calendarRows[i] = [...calendarRows[i], {\r\n            classes: '',\r\n            date: `${currentMonthCounter}-${selectedDate.getMonth() + 1}-${selectedDate.getFullYear()}`,\r\n            value: currentMonthCounter,\r\n            event:[]\r\n          }];\r\n          currentMonthCounter++;\r\n        }\r\n      }\r\n      else if( i > 1 && currentMonthCounter < daysInMonth + 1 ) {\r\n        calendarRows[i] = [...calendarRows[i], {\r\n          classes: '',\r\n          date: `${currentMonthCounter}-${selectedDate.getMonth() + 1}-${selectedDate.getFullYear()}`,\r\n          value: currentMonthCounter,\r\n          event:[]\r\n        }];\r\n        currentMonthCounter++;\r\n      }else {\r\n        calendarRows[i] = [...calendarRows[i], {\r\n          classes: 'in-next-month',\r\n          date: `${nextMonthCounter}-${selectedDate.getMonth() + 2 === 13 ? 1 : selectedDate.getMonth() + 2}-${selectedDate.getMonth() + 2 === 13 ? selectedDate.getFullYear() + 1 : selectedDate.getFullYear()}`,\r\n          value: nextMonthCounter,\r\n          event:[]\r\n        }];\r\n        nextMonthCounter++;\r\n      }\r\n    }\r\n  }\r\n\r\n\r\n  const getPrevMonth = () => {\r\n    setSelectedDate(prevValue => new Date(prevValue.getFullYear(), prevValue.getMonth() - 1, 1));\r\n  }\r\n\r\n  const getNextMonth = () => {\r\n    setSelectedDate(prevValue => new Date(prevValue.getFullYear(), prevValue.getMonth() + 1, 1));\r\n  }\r\n\r\n  return {\r\n    daysShort,\r\n    monthNames,\r\n    todayFormatted,\r\n    calendarRows,\r\n    selectedDate,\r\n    getPrevMonth,\r\n    getNextMonth\r\n  }\r\n}\r\n\r\nexport default useCalendar;"]},"metadata":{},"sourceType":"module"}